// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: time.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_time_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_time_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3010000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3010001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_time_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_time_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_time_2eproto;
namespace time_message {
class TimeMessage;
class TimeMessageDefaultTypeInternal;
extern TimeMessageDefaultTypeInternal _TimeMessage_default_instance_;
class TimeRequest;
class TimeRequestDefaultTypeInternal;
extern TimeRequestDefaultTypeInternal _TimeRequest_default_instance_;
}  // namespace time_message
PROTOBUF_NAMESPACE_OPEN
template<> ::time_message::TimeMessage* Arena::CreateMaybeMessage<::time_message::TimeMessage>(Arena*);
template<> ::time_message::TimeRequest* Arena::CreateMaybeMessage<::time_message::TimeRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace time_message {

// ===================================================================

class TimeMessage :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:time_message.TimeMessage) */ {
 public:
  TimeMessage();
  virtual ~TimeMessage();

  TimeMessage(const TimeMessage& from);
  TimeMessage(TimeMessage&& from) noexcept
    : TimeMessage() {
    *this = ::std::move(from);
  }

  inline TimeMessage& operator=(const TimeMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TimeMessage& operator=(TimeMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TimeMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TimeMessage* internal_default_instance() {
    return reinterpret_cast<const TimeMessage*>(
               &_TimeMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(TimeMessage& a, TimeMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(TimeMessage* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TimeMessage* New() const final {
    return CreateMaybeMessage<TimeMessage>(nullptr);
  }

  TimeMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TimeMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TimeMessage& from);
  void MergeFrom(const TimeMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TimeMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "time_message.TimeMessage";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_time_2eproto);
    return ::descriptor_table_time_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSecondsFieldNumber = 1,
    kMinutesFieldNumber = 2,
    kHoursFieldNumber = 3,
    kMdayFieldNumber = 4,
    kMonthFieldNumber = 5,
    kYearFieldNumber = 6,
    kWdayFieldNumber = 7,
    kYdayFieldNumber = 8,
    kIsdstFieldNumber = 9,
  };
  // uint32 seconds = 1;
  void clear_seconds();
  ::PROTOBUF_NAMESPACE_ID::uint32 seconds() const;
  void set_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_seconds() const;
  void _internal_set_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 minutes = 2;
  void clear_minutes();
  ::PROTOBUF_NAMESPACE_ID::uint32 minutes() const;
  void set_minutes(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_minutes() const;
  void _internal_set_minutes(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 hours = 3;
  void clear_hours();
  ::PROTOBUF_NAMESPACE_ID::uint32 hours() const;
  void set_hours(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hours() const;
  void _internal_set_hours(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 mday = 4;
  void clear_mday();
  ::PROTOBUF_NAMESPACE_ID::uint32 mday() const;
  void set_mday(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mday() const;
  void _internal_set_mday(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 month = 5;
  void clear_month();
  ::PROTOBUF_NAMESPACE_ID::uint32 month() const;
  void set_month(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_month() const;
  void _internal_set_month(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 year = 6;
  void clear_year();
  ::PROTOBUF_NAMESPACE_ID::uint32 year() const;
  void set_year(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_year() const;
  void _internal_set_year(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 wday = 7;
  void clear_wday();
  ::PROTOBUF_NAMESPACE_ID::uint32 wday() const;
  void set_wday(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_wday() const;
  void _internal_set_wday(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 yday = 8;
  void clear_yday();
  ::PROTOBUF_NAMESPACE_ID::uint32 yday() const;
  void set_yday(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_yday() const;
  void _internal_set_yday(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 isdst = 9;
  void clear_isdst();
  ::PROTOBUF_NAMESPACE_ID::uint32 isdst() const;
  void set_isdst(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_isdst() const;
  void _internal_set_isdst(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:time_message.TimeMessage)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 seconds_;
  ::PROTOBUF_NAMESPACE_ID::uint32 minutes_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hours_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mday_;
  ::PROTOBUF_NAMESPACE_ID::uint32 month_;
  ::PROTOBUF_NAMESPACE_ID::uint32 year_;
  ::PROTOBUF_NAMESPACE_ID::uint32 wday_;
  ::PROTOBUF_NAMESPACE_ID::uint32 yday_;
  ::PROTOBUF_NAMESPACE_ID::uint32 isdst_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_time_2eproto;
};
// -------------------------------------------------------------------

class TimeRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:time_message.TimeRequest) */ {
 public:
  TimeRequest();
  virtual ~TimeRequest();

  TimeRequest(const TimeRequest& from);
  TimeRequest(TimeRequest&& from) noexcept
    : TimeRequest() {
    *this = ::std::move(from);
  }

  inline TimeRequest& operator=(const TimeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TimeRequest& operator=(TimeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TimeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TimeRequest* internal_default_instance() {
    return reinterpret_cast<const TimeRequest*>(
               &_TimeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(TimeRequest& a, TimeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(TimeRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TimeRequest* New() const final {
    return CreateMaybeMessage<TimeRequest>(nullptr);
  }

  TimeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TimeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TimeRequest& from);
  void MergeFrom(const TimeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TimeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "time_message.TimeRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_time_2eproto);
    return ::descriptor_table_time_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSecondsFieldNumber = 1,
    kMinutesFieldNumber = 2,
    kHoursFieldNumber = 3,
    kMdayFieldNumber = 4,
    kMonthFieldNumber = 5,
    kYearFieldNumber = 6,
    kWdayFieldNumber = 7,
    kYdayFieldNumber = 8,
    kIsdstFieldNumber = 9,
  };
  // bool seconds = 1;
  void clear_seconds();
  bool seconds() const;
  void set_seconds(bool value);
  private:
  bool _internal_seconds() const;
  void _internal_set_seconds(bool value);
  public:

  // bool minutes = 2;
  void clear_minutes();
  bool minutes() const;
  void set_minutes(bool value);
  private:
  bool _internal_minutes() const;
  void _internal_set_minutes(bool value);
  public:

  // bool hours = 3;
  void clear_hours();
  bool hours() const;
  void set_hours(bool value);
  private:
  bool _internal_hours() const;
  void _internal_set_hours(bool value);
  public:

  // bool mday = 4;
  void clear_mday();
  bool mday() const;
  void set_mday(bool value);
  private:
  bool _internal_mday() const;
  void _internal_set_mday(bool value);
  public:

  // bool month = 5;
  void clear_month();
  bool month() const;
  void set_month(bool value);
  private:
  bool _internal_month() const;
  void _internal_set_month(bool value);
  public:

  // bool year = 6;
  void clear_year();
  bool year() const;
  void set_year(bool value);
  private:
  bool _internal_year() const;
  void _internal_set_year(bool value);
  public:

  // bool wday = 7;
  void clear_wday();
  bool wday() const;
  void set_wday(bool value);
  private:
  bool _internal_wday() const;
  void _internal_set_wday(bool value);
  public:

  // bool yday = 8;
  void clear_yday();
  bool yday() const;
  void set_yday(bool value);
  private:
  bool _internal_yday() const;
  void _internal_set_yday(bool value);
  public:

  // bool isdst = 9;
  void clear_isdst();
  bool isdst() const;
  void set_isdst(bool value);
  private:
  bool _internal_isdst() const;
  void _internal_set_isdst(bool value);
  public:

  // @@protoc_insertion_point(class_scope:time_message.TimeRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  bool seconds_;
  bool minutes_;
  bool hours_;
  bool mday_;
  bool month_;
  bool year_;
  bool wday_;
  bool yday_;
  bool isdst_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_time_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TimeMessage

// uint32 seconds = 1;
inline void TimeMessage::clear_seconds() {
  seconds_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TimeMessage::_internal_seconds() const {
  return seconds_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TimeMessage::seconds() const {
  // @@protoc_insertion_point(field_get:time_message.TimeMessage.seconds)
  return _internal_seconds();
}
inline void TimeMessage::_internal_set_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  seconds_ = value;
}
inline void TimeMessage::set_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_seconds(value);
  // @@protoc_insertion_point(field_set:time_message.TimeMessage.seconds)
}

// uint32 minutes = 2;
inline void TimeMessage::clear_minutes() {
  minutes_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TimeMessage::_internal_minutes() const {
  return minutes_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TimeMessage::minutes() const {
  // @@protoc_insertion_point(field_get:time_message.TimeMessage.minutes)
  return _internal_minutes();
}
inline void TimeMessage::_internal_set_minutes(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  minutes_ = value;
}
inline void TimeMessage::set_minutes(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_minutes(value);
  // @@protoc_insertion_point(field_set:time_message.TimeMessage.minutes)
}

// uint32 hours = 3;
inline void TimeMessage::clear_hours() {
  hours_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TimeMessage::_internal_hours() const {
  return hours_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TimeMessage::hours() const {
  // @@protoc_insertion_point(field_get:time_message.TimeMessage.hours)
  return _internal_hours();
}
inline void TimeMessage::_internal_set_hours(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  hours_ = value;
}
inline void TimeMessage::set_hours(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hours(value);
  // @@protoc_insertion_point(field_set:time_message.TimeMessage.hours)
}

// uint32 mday = 4;
inline void TimeMessage::clear_mday() {
  mday_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TimeMessage::_internal_mday() const {
  return mday_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TimeMessage::mday() const {
  // @@protoc_insertion_point(field_get:time_message.TimeMessage.mday)
  return _internal_mday();
}
inline void TimeMessage::_internal_set_mday(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  mday_ = value;
}
inline void TimeMessage::set_mday(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mday(value);
  // @@protoc_insertion_point(field_set:time_message.TimeMessage.mday)
}

// uint32 month = 5;
inline void TimeMessage::clear_month() {
  month_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TimeMessage::_internal_month() const {
  return month_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TimeMessage::month() const {
  // @@protoc_insertion_point(field_get:time_message.TimeMessage.month)
  return _internal_month();
}
inline void TimeMessage::_internal_set_month(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  month_ = value;
}
inline void TimeMessage::set_month(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_month(value);
  // @@protoc_insertion_point(field_set:time_message.TimeMessage.month)
}

// uint32 year = 6;
inline void TimeMessage::clear_year() {
  year_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TimeMessage::_internal_year() const {
  return year_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TimeMessage::year() const {
  // @@protoc_insertion_point(field_get:time_message.TimeMessage.year)
  return _internal_year();
}
inline void TimeMessage::_internal_set_year(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  year_ = value;
}
inline void TimeMessage::set_year(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_year(value);
  // @@protoc_insertion_point(field_set:time_message.TimeMessage.year)
}

// uint32 wday = 7;
inline void TimeMessage::clear_wday() {
  wday_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TimeMessage::_internal_wday() const {
  return wday_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TimeMessage::wday() const {
  // @@protoc_insertion_point(field_get:time_message.TimeMessage.wday)
  return _internal_wday();
}
inline void TimeMessage::_internal_set_wday(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  wday_ = value;
}
inline void TimeMessage::set_wday(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_wday(value);
  // @@protoc_insertion_point(field_set:time_message.TimeMessage.wday)
}

// uint32 yday = 8;
inline void TimeMessage::clear_yday() {
  yday_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TimeMessage::_internal_yday() const {
  return yday_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TimeMessage::yday() const {
  // @@protoc_insertion_point(field_get:time_message.TimeMessage.yday)
  return _internal_yday();
}
inline void TimeMessage::_internal_set_yday(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  yday_ = value;
}
inline void TimeMessage::set_yday(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_yday(value);
  // @@protoc_insertion_point(field_set:time_message.TimeMessage.yday)
}

// uint32 isdst = 9;
inline void TimeMessage::clear_isdst() {
  isdst_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TimeMessage::_internal_isdst() const {
  return isdst_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TimeMessage::isdst() const {
  // @@protoc_insertion_point(field_get:time_message.TimeMessage.isdst)
  return _internal_isdst();
}
inline void TimeMessage::_internal_set_isdst(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  isdst_ = value;
}
inline void TimeMessage::set_isdst(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_isdst(value);
  // @@protoc_insertion_point(field_set:time_message.TimeMessage.isdst)
}

// -------------------------------------------------------------------

// TimeRequest

// bool seconds = 1;
inline void TimeRequest::clear_seconds() {
  seconds_ = false;
}
inline bool TimeRequest::_internal_seconds() const {
  return seconds_;
}
inline bool TimeRequest::seconds() const {
  // @@protoc_insertion_point(field_get:time_message.TimeRequest.seconds)
  return _internal_seconds();
}
inline void TimeRequest::_internal_set_seconds(bool value) {
  
  seconds_ = value;
}
inline void TimeRequest::set_seconds(bool value) {
  _internal_set_seconds(value);
  // @@protoc_insertion_point(field_set:time_message.TimeRequest.seconds)
}

// bool minutes = 2;
inline void TimeRequest::clear_minutes() {
  minutes_ = false;
}
inline bool TimeRequest::_internal_minutes() const {
  return minutes_;
}
inline bool TimeRequest::minutes() const {
  // @@protoc_insertion_point(field_get:time_message.TimeRequest.minutes)
  return _internal_minutes();
}
inline void TimeRequest::_internal_set_minutes(bool value) {
  
  minutes_ = value;
}
inline void TimeRequest::set_minutes(bool value) {
  _internal_set_minutes(value);
  // @@protoc_insertion_point(field_set:time_message.TimeRequest.minutes)
}

// bool hours = 3;
inline void TimeRequest::clear_hours() {
  hours_ = false;
}
inline bool TimeRequest::_internal_hours() const {
  return hours_;
}
inline bool TimeRequest::hours() const {
  // @@protoc_insertion_point(field_get:time_message.TimeRequest.hours)
  return _internal_hours();
}
inline void TimeRequest::_internal_set_hours(bool value) {
  
  hours_ = value;
}
inline void TimeRequest::set_hours(bool value) {
  _internal_set_hours(value);
  // @@protoc_insertion_point(field_set:time_message.TimeRequest.hours)
}

// bool mday = 4;
inline void TimeRequest::clear_mday() {
  mday_ = false;
}
inline bool TimeRequest::_internal_mday() const {
  return mday_;
}
inline bool TimeRequest::mday() const {
  // @@protoc_insertion_point(field_get:time_message.TimeRequest.mday)
  return _internal_mday();
}
inline void TimeRequest::_internal_set_mday(bool value) {
  
  mday_ = value;
}
inline void TimeRequest::set_mday(bool value) {
  _internal_set_mday(value);
  // @@protoc_insertion_point(field_set:time_message.TimeRequest.mday)
}

// bool month = 5;
inline void TimeRequest::clear_month() {
  month_ = false;
}
inline bool TimeRequest::_internal_month() const {
  return month_;
}
inline bool TimeRequest::month() const {
  // @@protoc_insertion_point(field_get:time_message.TimeRequest.month)
  return _internal_month();
}
inline void TimeRequest::_internal_set_month(bool value) {
  
  month_ = value;
}
inline void TimeRequest::set_month(bool value) {
  _internal_set_month(value);
  // @@protoc_insertion_point(field_set:time_message.TimeRequest.month)
}

// bool year = 6;
inline void TimeRequest::clear_year() {
  year_ = false;
}
inline bool TimeRequest::_internal_year() const {
  return year_;
}
inline bool TimeRequest::year() const {
  // @@protoc_insertion_point(field_get:time_message.TimeRequest.year)
  return _internal_year();
}
inline void TimeRequest::_internal_set_year(bool value) {
  
  year_ = value;
}
inline void TimeRequest::set_year(bool value) {
  _internal_set_year(value);
  // @@protoc_insertion_point(field_set:time_message.TimeRequest.year)
}

// bool wday = 7;
inline void TimeRequest::clear_wday() {
  wday_ = false;
}
inline bool TimeRequest::_internal_wday() const {
  return wday_;
}
inline bool TimeRequest::wday() const {
  // @@protoc_insertion_point(field_get:time_message.TimeRequest.wday)
  return _internal_wday();
}
inline void TimeRequest::_internal_set_wday(bool value) {
  
  wday_ = value;
}
inline void TimeRequest::set_wday(bool value) {
  _internal_set_wday(value);
  // @@protoc_insertion_point(field_set:time_message.TimeRequest.wday)
}

// bool yday = 8;
inline void TimeRequest::clear_yday() {
  yday_ = false;
}
inline bool TimeRequest::_internal_yday() const {
  return yday_;
}
inline bool TimeRequest::yday() const {
  // @@protoc_insertion_point(field_get:time_message.TimeRequest.yday)
  return _internal_yday();
}
inline void TimeRequest::_internal_set_yday(bool value) {
  
  yday_ = value;
}
inline void TimeRequest::set_yday(bool value) {
  _internal_set_yday(value);
  // @@protoc_insertion_point(field_set:time_message.TimeRequest.yday)
}

// bool isdst = 9;
inline void TimeRequest::clear_isdst() {
  isdst_ = false;
}
inline bool TimeRequest::_internal_isdst() const {
  return isdst_;
}
inline bool TimeRequest::isdst() const {
  // @@protoc_insertion_point(field_get:time_message.TimeRequest.isdst)
  return _internal_isdst();
}
inline void TimeRequest::_internal_set_isdst(bool value) {
  
  isdst_ = value;
}
inline void TimeRequest::set_isdst(bool value) {
  _internal_set_isdst(value);
  // @@protoc_insertion_point(field_set:time_message.TimeRequest.isdst)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace time_message

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_time_2eproto
